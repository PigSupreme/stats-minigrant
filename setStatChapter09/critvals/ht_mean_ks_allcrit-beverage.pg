##DESCRIPTION
##  Hypothesis test for single mean, template.
##ENDDESCRIPTION
## DBsubject(Statistics)
## DBchapter(Hypothesis tests)
## DBsection(Two sample proportion)
## Date(05/08/2020)
## Institution(Clayton State University)
## Author(Michael J. Dancs)
## TitleText1()
## AuthorText1()
## EditionText1()
## Section1()
## Problem1()
## KEYWORDS('statistics', 'hypothesis testing', 'mean')

DOCUMENT(); 

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "answerHints.pl",
  "PGchoicemacros.pl",
  "PGstatisticsmacros.pl",
  "PGML.pl",
  "scaffold.pl"
  );

TEXT(beginproblem());

######################################
#  Setup
Context("Numeric");
Context()->strings->remove("infinity","inf");
$abstol = .00051;
Context()->flags->set(
  tolerance => $abstol,
  tolType => "absolute",
);

# Alterntative hypothesis ("left", "two", "right):
$tails = "left";

# Significance level
$alpha = list_random(.1, .05, .02, .01);
$alphap = 100*$alpha;

# Text for reject and fail to reject; correct answer chosen automatically
%decision = (
  reject => 'Yes, because the test statistic is in the critical region.',
  fail => 'No, because the test statistic is not in the the critical region.'
  );
# Extra incorrect answers for reject/fail
@decisions_wrong = (
  'No, because the test statistic is less than the significance level.',
  'Yes, because the test statistic is greater than the significance level.'
  );  

# Sample data and statistic (single proportion)
$n = random(31, 40, 1);
$mu = (12, 16, 24)[random(0,2,1)];
$xbar = $mu - random(0.15, 0.23, 0.01);
$s = random(0.09, 0.13, 0.01);

$sd = $s/sqrt($n);
$stat = ($xbar-$mu)/$sd;

# Multiple choice text for Null and Alternative
# SIGN will be replaced in the template by \lt, \neq, and \gt
$hypo_template = "\(\mu SIGN $mu\)";
$nullsign = '=';

# P-Values
%pvalhash;
$pvalhash{right} = uprob($stat);
$pvalhash{left} = 1 - $pvalhash{right};
$pvalhash{two} = 2*min($pvalhash{left}, $pvalhash{right});
$pval = $pvalhash{$tails};

# Critical values
%crithash;
$crithash{right} = udistr($alpha);
$crithash{left} = -$crithash{right};
$crithash{two} = udistr($alpha/2);
$cval = $crithash{$tails};

# Feeback for critical region
$dvar = "z";
$cvalr = int(.5+$cval*10000)/10000;
if ($tails eq "left") {$crithash{region} = "$dvar\lt $cvalr"}
if ($tails eq "right") {$crithash{region} = "$dvar\gt $cvalr"}
if ($tails eq "two") {$crithash{region} = "\lvert $dvar\rvert\gt $cvalr"}

######################################
### Reject or fail to reject the Null?
######################################
# Use a P-Value if we computed it:
if ($pval) {
  $reject = ($pval < $alpha)
# Otherwise, use the critical value:
} else {
  if ($tails eq "left") {$reject = ($stat < $cval)};
  if ($tails eq "right") {$reject = ($stat > $cval)};
  if ($tails eq "two") {$reject = (abs($stat) > abs($cval))};
}

%hypo = (null => ($hypo_template =~ s/SIGN/$nullsign/r));
$hypo{left}  = ($hypo_template =~ s/SIGN/\lt/r);
$hypo{two}  = ($hypo_template =~ s/SIGN/\neq/r);
$hypo{right}  = ($hypo_template =~ s/SIGN/\gt/r);

# Scramble manually here for consistent order in both MC questions
@hypolist = ($hypo{null}, $hypo{left}, $hypo{right}, $hypo{two})[NchooseK(4,4)];

$mc_null = new_multiple_choice();
$mc_null->qa('An appropriate Null Hypothesis is:',$hypo{null});
$mc_null->makeLast(@hypolist);

$mc_alt = new_multiple_choice();
$mc_alt->qa('An appropriate Alternative Hypothesis is:',$hypo{$tails});
$mc_alt->makeLast(@hypolist);

$decision_correct = $decision{($reject) ? reject: fail};
push(@decisions_wrong, $decision{($reject) ? fail : reject});
$mc_decide = new_multiple_choice();
$mc_decide->qa('', $decision_correct);
$mc_decide->extra(@decisions_wrong);

######################################
#  Main text

BEGIN_PGML
Canned beverages are sold by volume, so a "[$mu]-oz" can is expected to contain [$mu] fluid ounces of the beverage. In reality, not every can contains exactly this amount.

Beverage companies might be subject to fines and/or lawsuits if their cans contain less beverage than advertised. Although it is impractical to test every can, a hypothesis test can used to determine if the mean volume of beverage is less than [$mu]-oz.

END_PGML

Scaffold::Begin(
      can_open => "when_previous_correct",
      is_open  => "correct_or_first_incorrect"
    );
Section::Begin();
BEGIN_PGML
An inspector at Cadre Cola will take a simple random from a large production run of [$mu] oz cans where the fluid volume has a known standard deviation of [`\sigma = [$s]`] oz. In order to test the situation described above:

[@ $mc_null->print_q() @]*
[@ $mc_null->print_a() @]*

[@ $mc_alt->print_q() @]*
[@ $mc_alt->print_a() @]*

END_PGML

ANS(radio_cmp($mc_null->correct_ans));
ANS(radio_cmp($mc_alt->correct_ans));

Section::End();

Section::Begin();
BEGIN_PGML
In a Simple Random Sample of [$n] "[$mu]-oz" cans of Cadre Cola, the mean fluid volume is found to be [`\bar{x} = [$xbar]`] oz. Find the value of the test statistic.

[`[$dvar] = `] [____________] 
(round to at least three decimal places).
END_PGML
##################
# Generic check for answers that are almost within tolerance
if ($abstol<=0) {$abstol = Context()->flags->get('tolerance')};
$tolerr = "You are close. Try using an exact answer, or rounding to more decimal places.";
$tolcheck = sub{
  ($correct, $student, $anshash) = @_;
  return (abs($student - $correct) < 20*$abstol)
  };

ANS(Real($stat)->cmp()->withPostFilter(AnswerHints($tolcheck => $tolerr)));
Section::End();

Section::Begin();
BEGIN_PGML
Using a(n) [$alphap]% significance level, the critical value of the test statistic is:  

[`[$dvar]^* = `] [____________]{abs($cval)}  
(enter a positive value, rounded to at least three decimal places).
END_PGML
Section::End();

### ANS($cval->cmp()

Section::Begin();
BEGIN_PGML
Can we conclude from this sample data that the mean fluid volume for this production run is less than [$mu] oz?  
[@ $mc_decide->print_a() @]*

END_PGML

ANS(radio_cmp($mc_decide->correct_ans));

Section::End();

Scaffold::End();
######################################
#  Answers


##############
### Solutions

$sdr = int(.5+1000000*$sd)/1000000;
$statr = int(.5+10000*$stat)/10000;
$critr = int(.5+10000*$cval)/10000;
$pvalr = int(.5+10000*$pval)/10000;

BEGIN_PGML_SOLUTION

For all samples of size [$n], the standard deviation of [`\bar{x}`] is

[`` \frac{\sigma}{\sqrt{n}} = \frac{[$s]}{\sqrt{[$n]}} = [$sdr]...``]

Keep this to as many digits as possible. The test statistic is:  

[``[$dvar] = \frac{[$xbar]-[$mu]}{[$sdr]} = [$statr]...``]

---

### Critical region method

This is a [$tails]-sided test; the critical rejection region (at the [$alphap]% significance level) is [`[$crithash{region}]`]. The test statistic ([`z = [$statr]`]) is [@ $reject ? "in the critical region, so we reject the Null Hypothesis" : "NOT in the critical region, so we fail to reject the Null Hypothesis" @].

---
### P-Value method

The [$tails]-sided P-value [@ ($pval_instructions) ? "($pval_instructions)" : '' @] is [@ $pvalr @] = [@ 100*$pvalr @]%. This is [@ $reject ? "less than the $alphap% significance level, so we" : "not less than the $alphap% significance level, so we fail to" @] reject the Null Hypothesis.
END_PGML_SOLUTION

COMMENT('Uses critical z-value method.');
ENDDOCUMENT();
