##DESCRIPTION
##  t-confidence interval for a single mean
##ENDDESCRIPTION

##KEYWORDS('Confidence Interval', 'Mean')

## DBsubject('Statistics')
## DBchapter('Confidence Intervals')
## DBsection('One sample mean - t')
## Date('3/27/2018')
## Author('Michael J. Dancs')
## Institution('Clayton State University')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGstatisticsmacros.pl",
  "answerHints.pl",
  "PGchoicemacros.pl",
  "PGML.pl"
  );

TEXT(beginproblem());

######################################
#  Setup
Context("Numeric");
$abstol = .00051;
Context()->flags->set(tolType=>'absolute',tolerance=>$abstol);

$n = random(37,48);
$mean = random(101.1,299.9,.2);
$ssd = random(30.01, 49.99,.02);

@cl = (90, 95, 99);
@zcrit = (1.6449, 1.960, 2.5758);
$stderr = $ssd/sqrt($n);

for my $i (0..2) {
  $tcrit = tdistr($n-1, (1-$cl[$i]/100)/2);
  $tsoln[$i] = $tcrit;
  @ci_left[$i] = $mean - $tcrit*$stderr;
  @ci_right[$i] = $mean + $tcrit*$stderr;
  # Lower limit provides feedback if students use the wrong distribution
  @ci_wrongz_left[$i] = $mean - $zcrit[$i]*$stderr;
  @ci_wrongdf_left[$i] = $mean - tdistr($n, (1-$cl[$i]/100)/2)*$ssd/sqrt($n+1);
  @ci_wrongdf2_left[$i] = $mean - tdistr($n-2, (1-$cl[$i]/100)/2)*$ssd/sqrt($n-1);
  @ci_wrongz_right[$i] = $mean + $zcrit[$i]*$stderr;
  @ci_wrongdf_right[$i] = $mean + tdistr($n, (1-$cl[$i]/100)/2)*$ssd/sqrt($n+1);
  @ci_wrongdf2_right[$i] = $mean + tdistr($n-2, (1-$cl[$i]/100)/2)*$ssd/sqrt($n-1);
  }

######################################
#  Main text

BEGIN_PGML
A large retail store wants to estimate the average amount of time ([`\mu`]) its customers wait in line during checkout. In a simple random sample of [$n] customers, the average wait time was [$mean] seconds. The wait times in the sample had a standard deviation of [$ssd] seconds.

In each question below, give answers to at least three decimal places.

a. Find a [$cl[0]]% confidence interval for [`\mu`], using the above sample data:  
[__________] [`<\mu<`] [__________]

b. Find a [$cl[1]]% confidence interval for [`\mu`], using the above sample data:  
[__________] [`<\mu<`] [__________]

c. Find a [$cl[2]]% confidence interval for [`\mu`], using the above sample data:  
[__________] [`<\mu<`] [__________]

END_PGML

######################################
#  Answers
$showPartialCorrectAnswers = 1;
##################
# Generic check for answers that are almost within tolerance
if ($abstol<=0) {$abstol = Context()->flags->get('tolerance')};
$errtol = 20*$abstol;
$tolerr = "You are close. Try using an exact answer, or rounding to more decimal places.";
$tolcheck = sub{
  ($correct, $student, $anshash) = @_;
  return (abs($student - $correct) < $errtol)
  };
  
for my $i (0..2) {
    # Check for correct distribution (z or t); dynamic tolerance
    $dtol_lo = abs($ans_left[$i] - $ci_wrongdf_left[$i])/2;
    $dtol_hi = abs($ans_left[$i] - $ci_wrongdf2_left[$i])/2;
    $dtol[$i] = ($dtol_lo < $dtol_hi) ? $dtol_lo : $dtol_hi;
    ANS(Real($ci_left[$i])->cmp->withPostFilter(AnswerHints(
      sub{
        my ($correct,$student,$ans) = @_;
        return abs($student - $ci_wrongz_left[$i]) < $dtol[$i] || 
          abs($student - $ci_wrongdf_left[$i]) < $dtol[$i] ||          
          abs($student - $ci_wrongdf2_left[$i]) < $dtol[$i];
    } => ["Check that you are using the correct distribution (z or t)."],
      $tolcheck=>$tolerr
    )));
    # Right endpoints
    ANS(Real($ci_right[$i])->cmp->withPostFilter(AnswerHints(
      sub{
        my ($correct,$student,$ans) = @_;
        return abs($student - $ci_wrongz_right[$i]) < $dtol[$i] || 
          abs($student - $ci_wrongdf_right[$i]) < $dtol[$i] ||          
          abs($student - $ci_wrongdf2_right[$i]) < $dtol[$i];
    } => ["Check that you are using the correct distribution (z or t)."],
       $tolcheck=>$tolerr
    )));
}
### Solutions ###########################################3
BEGIN_PGML_SOLUTION
To find the [$cl[0]]% confidence interval:

1. The sample statistic (point estimate) is [$mean].  
1. Since the population standard deviation [`\sigma`] is unknown, the critical value is a t-score, with df = [$n] - 1. Find it using technology or a table: [$tsoln[0]].  
1. For all samples of size [$n], the standard error (approximate standard deviation) of [`\bar{x}`] is given by  
[``\frac{s}{\sqrt{n}}= [$ssd]/\text{sqrt}([$n]) = [$stderr];``]  
leave this unrounded if possible.  
1. The Margin of Error (some call this EBM) is the product of the last two values. You can compute it directly as:  
[``[$tsoln[0]] * [$ssd]/\text{sqrt}([$n])=[@ $tsoln[0]*$stderr @]``].  
1. The lower limit of the confidence interval is:  
[``[$mean]  - [@ $tsoln[0]*$stderr @]``].  
1. The upper limit of the confidence interval is:  
[``[$mean]  + [@ $tsoln[0]*$stderr @]``].  

The steps are the same for the other two parts, but use a different critical value([$tsoln[1]] for [$cl[1]]% and [$tsoln[2]] for [$cl[2]]%; both use df = [@ $n -1 @]).

If you like memorzing formulas; the one used in the computations above is:
>>[``\bar{x}\pm t_{\alpha/2}\cdot\frac{s}{\sqrt{n}}``]<<

END_PGML_SOLUTION
COMMENT("Gives feedback for using the wrong distribution.");

ENDDOCUMENT();       # This should be the last executable line in the problem.
