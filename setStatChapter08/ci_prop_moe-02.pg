##DESCRIPTION
##  z-confidence interval for a single proportion
##ENDDESCRIPTION

##KEYWORDS('Confidence Interval', 'Proportion')

## DBsubject('Statistics')
## DBchapter('Confidence Intervals')
## DBsection('One sample proportion')
## Date('3/29/2018')
## Author('Michael J. Dancs')
## Institution('Clayton State University')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "answerHints.pl",
  "PGnumericalmacros.pl",
  "PGstatisticsmacros.pl",
  "PGML.pl"
  );

TEXT(beginproblem());

######################################
#  Setup

$n = random(800,890,5);
$x = int($n*random(81,89)/100);
$phat = $x/$n;

$choice = random(0,3,1);
$CLP = (81, 83, 87, 89)[$choice];
$CL = $CLP/100;
$z = abs(udistr((1-$CL)/2));

$sep = sqrt($phat*(1-$phat)/$n);
$moe_raw = $z * $sep;
$cil_raw = 100*($phat-$moe_raw);
$ciu_raw = 100*($phat+$moe_raw);

$moe = int(.5+10000*$moe_raw)/100;
$cil = int(.5+100*$cil_raw)/100;
$ciu = int(.5+100*$ciu_raw)/100;


######################################
#  Main text

BEGIN_PGML
In a simple random sample of [$n] U.S. college students, [$x] were receiving some form of financial aid to pay for college.

a. Using the above sample data, find the [$CLP]% confidence level for the true percentage of all U.S. college students who receive financial aid. Give your answers as percentages to at least two decimal places. Do not type the percent signs.  
[__________]% [`< p < `] [__________]%

b.  The margin of error for this confidence interval is [__________]% (give your answer as a percentage with at least two decimal places).

END_PGML

######################################
#  Answers

$showPartialCorrectAnswers = 1;
Context()->flags->set(tolType=>'absolute',tolerance=>.015);
##################
# Generic check for answers that are almost within tolerance
if ($abstol<=0) {$abstol = Context()->flags->get('tolerance')};
$tolerr = "You are close. Try using an exact answer, or rounding to more decimal places.";
$tolcheck = sub{
  ($correct, $student, $anshash) = @_;
  return (abs($student - $correct) < 20*$abstol)
  };
#################
# Generic check for proportion versus percentage
$pererr = "It looks like you've entered a proportion. This problem wants you to convert to percent.";
$percheck = sub{
  ($correct, $student, $anshash) = @_;
  return (abs($student - $correct/100) < 20*$abstol)
  };

$moe_ans = Real("$moe");
$cil_ans = Real("$cil");
$ciu_ans = Real("$ciu");

ANS($cil_ans->cmp->withPostFilter(AnswerHints(
  $tolcheck=>$tolerr, $percheck=>$pererr
)));

ANS($ciu_ans->cmp->withPostFilter(AnswerHints(
  $tolcheck=>$tolerr, $percheck=>$pererr
)));

ANS($moe_ans->cmp->withPostFilter(AnswerHints(
  $tolcheck=>$tolerr, $percheck=>$pererr
)));

### Solutions ###########################################3
$zcrit = int(5.+10000*$z)/10000;
$phata = int(.5+100000*$phat)/100000;
$stderr = sqrt($phata*(1-$phata)/$n);
$moeans = $zcrit * $stderr; 
BEGIN_PGML_SOLUTION
1. The sample statistic (point estimate) is [$x]/[$n] = [$phata]. Leave this in decimal form fow now.  
1. Inference about proportions uses z-scores; the [$CLP]% critical value is [$zcrit].  
1. For all samples of size [$n], the standard error (approximate standard deviation) of [`\hat{p}`] is given by  
[``\sqrt{\frac{\hat{p}(1-\hat{p})}{n}}= \text{sqrt}([$phata] * [@ 1-$phata @] / [$n]) = [$stderr]``]  
leave this unrounded if possible.  
1. The Margin of Error (some call this EBP) is the product of the last two values:  
[``[$zcrit] * [$stderr] = [$moeans]``].  
1. The lower limit of the confidence interval is:  
[``[$phata]  - [$moeans]``].  
1. The upper limit of the confidence interval is:  
[``[$phata]  + [$moeans]``].  
1. The problem wants percentages, so make sure to convert the previous answers ( you should receive a warning if you've done everything else correctly).

If you like memorzing formulas; the one used in the computations above is:
>>[``\hat{p}\pm z_{\alpha/2}\cdot\sqrt{\frac{\hat{p}(1-\hat{p})}{n}}``]<<

END_PGML_SOLUTION
COMMENT("No feedback for common errors, but solution is provided.");

ENDDOCUMENT();       # This should be the last executable line in the problem.
