## DESCRIPTION
## DBsubject('Statistics')
## DBchapter('Hypothesis tests')
## DBsection('Independent samples - t')
## Institution('Clayton State University')
## Author('Michael J. Dancs')
## TitleText1('')
## AuthorText1('')
## EditionText1('')
## Section1('')
## Problem1('')
## KEYWORDS('statistics', 'two sample', 'hypothesis', 't score', 'millenial')

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGchoicemacros.pl",
  "PGnumericalmacros.pl",
  "PGstatisticsmacros.pl",
  "PGML.pl",
  "answerHints.pl",
  "scaffold.pl"
);


TEXT(beginproblem());

######################################
#  Setup

Context("Numeric");
Context()->strings->remove("infinity","inf");  # For Geogebra user errors
$abstol = .00051;
Context()->flags->set(
  tolerance => $abstol,
  tolType => "absolute",
);

# Non-mathematical flavour here

# Alterntative hypothesis ("left", "two", "right):
$tails = "two";

# Significance level
$alpha = list_random(.1, .05, .02, .01);
$alphap = 100*$alpha;

# Multiple choice text for Null and Alternative
# SIGN will be replaced in the template by \lt, \neq, and \gt
$hypo_template = '\(\mu_1 SIGN \mu_2\)';
$nullsign = '=';

# Text for reject and fail to reject; correct answer chosen automatically
$decision_text = "At the $alphap% significance level:";
%decision = (
  reject => 'The sample provides sufficient evidence of a difference in average usage by gender.',
  fail => 'The difference in usage by gender is not statistically significant.'
);
# Extra incorrect answers for reject/fail
@decisions_wrong = (
  'The sample provides sufficient evidence that there is no difference in average usage by gender.'
);


# Set option for df here
@dfmethodlist = (POOLED_DF, EXACT_DF_ROUNDED, CONSERVATIVE_DF);
$df_method = "EXACT_DF_ROUNDED";
#$df_method = "CONSERVATIVE_DF";
#$df_method = "POOLED_SAMPLE"; # Won't work; for feedback only

%method_directions = (
  "EXACT_DF_ROUNDED" => "the exact formula for degrees of freedom (Welch's T-test), rounded for using critical value tables",
  "CONSERVATIVE_DF" => "the conservative option 2 for df",
  "POOLED_DF" => "a pooled sample"
);

######################## MATH STARTS HERE ############################
# Generates summary data with
# * Unequal sample sizes
# * Positive difference in sample means
# * Unequal sample StdDevs
while($n1 == $n2) {
  $n1 = random(31,50,1);
  $n2 = random(31,50,1);
  }
$mean1 = 60*random(0,8) + random(98.1,185.1,.2);
$mean2 = $mean1 - random(2.1,4.1,.2);
while($s1 == $s2) {
  $s1 = random(5,10,.01);
  $s2 = random(5,10,.01);
  }

# For storing critical values and df [left, two, right, df]
%crithash = (
  POOLED_DF => {left => 1, right => 0, two => 0, df =>0},
  EXACT_DF_ROUNDED => {left => 1, right => 0, two => 0, df => 0},
  CONSERVATIVE_DF => {left => 1, right => 0, two => 0, df => 0}
  );

#####################################################################
# Pooled t-test; equal variances assumed
###
$df_pooled = $n1 + $n2 - 2;
$varpooled = (($n1-1)*$s1*$s1 + ($n2-1)*$s2*$s2)/$df_pooled;
$sdpooled = sqrt($varpooled*((1/$n1)+(1/$n2)));
$testpooled = ($mean1-$mean2)/$sdpooled;
$crithash{POOLED_DF}{df} = $df_pooled; 

#####################################################################
# Lazy exact df (Minitab, for example)
# These use exact df but round down to avoid the Beta integrand
# We default to Conservative Option 2 if $df_true doesn't exist
$vard = ($s1**2/$n1)+($s2**2/$n2);
$test = ($mean1-$mean2)/(sqrt($vard));
$df_true = $vard**2 / ( ($s1**4)/($n1**2)/($n1-1) +  ($s2**4)/($n2**2)/($n2-1) );
$df_mt = int($df_true);
$crithash{EXACT_DF_ROUNDED}{df} = $df_mt;

#####################################################################
# Conservative "Option 2"; df = (smaller sample size) - 1
$vard = ($s1**2/$n1)+($s2**2/$n2);
$test = ($mean1-$mean2)/(sqrt($vard));
$df_cons = min(($n1, $n2)) - 1;
$crithash{CONSERVATIVE_DF}{df} = $df_cons;

#####################################################################
# Populate critical values for each method
foreach my $dfm (@dfmethodlist) {
  $crithash{$dfm}{right} = tdistr($crithash{$dfm}{df}, $alpha);
  $crithash{$dfm}{left} = 1 - ($crithash{$dfm}{right});
  $crithash{$dfm}{two} = tdistr($crithash{$dfm}{df}, $alpha/2);
  }

# Grab the correct critical value for the problem
$cval = $crithash{$df_method}{$tails};

# For feedback about various methods
$cval_mt = $crithash{EXACT_DF_ROUNDED}{$tails};
$cval_cons = $crithash{CONSERVATIVE_DF}{$tails};
$cval_pooled = $crithash{POOLED_DF}{$tails};

# Feeback for critical region
$dvar = "t";
$cvalr = int(.5+$cval*10000)/10000;
if ($tails eq "left") {$crithash{region} = "$dvar\lt $cvalr"}
if ($tails eq "right") {$crithash{region} = "$dvar\gt $cvalr"}
if ($tails eq "two") {$crithash{region} = "\lvert $dvar\rvert\gt $cvalr"}

######################################
### Reject or fail to reject the Null?
######################################
# Use the critical value:
if ($tails eq "left") {$reject = ($test < $cval)};
if ($tails eq "right") {$reject = ($test > $cval)};
if ($tails eq "two") {$reject = (abs($test) > abs($cval))};


# Dynamic hypotheses for multiple choice
%hypo = (null => ($hypo_template =~ s/SIGN/$nullsign/r));
$hypo{left}  = ($hypo_template =~ s/SIGN/\lt/r);
$hypo{two}  = ($hypo_template =~ s/SIGN/\neq/r);
$hypo{right}  = ($hypo_template =~ s/SIGN/\gt/r);

# Scramble manually here for consistent order in both MC questions
@hypolist = ($hypo{null}, $hypo{left}, $hypo{right}, $hypo{two})[NchooseK(4,4)];

$mc_null = new_multiple_choice();
$mc_null->qa('An appropriate Null Hypothesis is:',$hypo{null});
$mc_null->makeLast(@hypolist);

$mc_alt = new_multiple_choice();
$mc_alt->qa('An appropriate Alternative Hypothesis is:',$hypo{$tails});
$mc_alt->makeLast(@hypolist);

$decision_correct = $decision{($reject) ? reject: fail};
push(@decisions_wrong, $decision{($reject) ? fail : reject});
$mc_decide = new_multiple_choice();
$mc_decide->qa('', $decision_correct);
$mc_decide->extra(@decisions_wrong);

$mc_stat = new_multiple_choice();
$mc_stat->qa("What type of test statistic should $name use?","t score");
$mc_stat->extra("z score", "\(\chi^2\) statistic", "P-Value");
######################################
#  Main text

BEGIN_PGML
A social media platform wants to determine if there is a significant difference between the average weekly usage (number of minutes spent on the site per week) of female users and male users, and plans to conduct a Hypothesis Test at the [$alphap]% significance level.

Let [`\mu_1`] be the average weekly usage among all male users, and [`\mu_2`] be the average daily usage among all female users.
END_PGML

Scaffold::Begin(
      can_open => "when_previous_correct",
      is_open  => "correct_or_first_incorrect"
    );
Section::Begin();
BEGIN_PGML

[@ $mc_alt->print_q() @]*
[@ $mc_alt->print_a() @]*

[@ $mc_null->print_q() @]*
[@ $mc_null->print_a() @]*
END_PGML
ANS(radio_cmp($mc_alt->correct_ans() ));
ANS(radio_cmp($mc_null->correct_ans() ));
Section::End();

Section::Begin();
BEGIN_PGML
Use the following sample data to answer the remaining questions. Assume these are independent Simple Random Samples.

[@ begintable(4) .
row(' ','\(\bar{x}\) (minutes)','\(s\) (minutes)','\(\quad n\quad\)') .
row('Male',$mean1, $s1, $n1) .
row('Female',$mean2, $s2, $n2) .
endtable()
@]*  

The value of the test statistic is [_________] (round to four decimal places)
END_PGML

##################
# Generic check for answers that are almost within tolerance
if ($abstol<=0) {$abstol = Context()->flags->get('tolerance')};
$tolerr = "You are close. Try rounding to more decimal places.";
$tolcheck = sub{
  ($correct, $student, $anshash) = @_;
  return (abs($student - $correct) < 20*$abstol)
  };

ANS(Real($test)->cmp()->withPostFilter(AnswerHints(
   # Used pooled samples
   sub {
     ($correct, $student, $hash) = @_;
     return (abs($student - $testpooled)) < 10*$abstol
     } => "Do not use pooled samples (equal population variances) for this problem.",
   $tolcheck=>$tolerr
   )));
Section::End();

Section::Begin();
BEGIN_PGML
Using [@ $method_directions{$df_method} @]:

The critical value for this sample data is [_______] (round to four decimal places).
END_PGML

### Checks for wrong direction and common df methods
$cval_ans = Real($cval);
ANS($cval_ans->cmp()->withPostFilter(AnswerHints(
   sub {
      ($correct, $student, $hash) = @_;
      return (abs($student/100 - $correct) < 100*$abstol)
   } => 'Do not convert to percent.',
   # Correct alternative, but wrong method/df
   sub {
      ($correct, $student, $hash) = @_;
      foreach my $dfm (@dfmethodlist) {
      if ($dfm ne $df_method) {
        if (abs($student - $cvalhash{$dfm}{$tails}) < 10*$abstol) {
           $hash->{ans_message} = "This appears to be the critical value using  $method_directions{$dfm}, which is the wrong method for this problem.";
           }
        }
      }
      return 0
   } => 'Correct alternative, but wrong method/df.',   
   # Wrong Alternative (with correct method/df)
   sub {
      ($correct, $student, $hash) = @_;
      foreach my $altdir ("left", "two", "right") {
      if ($altdir ne $tails) {
        if (abs($student - $cvalhash{$df_method}{$altdir}) < 10*$abstol) {
           $hash->{ans_message} = "Are you using the correct alternative hypothesis? This appears to be the critical value for a $altdir-sided alternative.";
           }
        }
      }
      return 0
      } => "Are you using the correct Alternative Hypothesis?",
   $tolcheck=>$tolerr,
   )));

Section::End();

Section::Begin();
BEGIN_PGML
[$decision_text]  
[@ $mc_decide->print_a() @]*  
END_PGML
ANS(radio_cmp($mc_decide->correct_ans() ));
Section::End();
Scaffold::End();

##############
### Solutions

$mdiffr = int(.5+($mean1 - $mean2)*1000)/1000;
$sdr = int(.5+1000000*sqrt($vard))/1000000;
$statr = int(.5+10000*$test)/10000;
$dfr = int(.5+100*$df_true)/100;

BEGIN_PGML_SOLUTION
It is assumed that you will be using technology to perform these computations. If not....

The difference in sample means is:  

[``\bar{x}_1-\bar{x}_2 = [$mean1] - [$mean2] = [$mdiffr]``]

The standard error (approximate standard deviation) of the difference in sample means is :  

[``\sqrt{\frac{s_1^2}{n_1}+\frac{s_2^2}{n_2}} = \sqrt{\frac{[$s1]^2}{[$n1]}+\frac{[$s2]^2}{[$n2]}} = [$sdr]...``]

The test statistic is:  

[``t = \frac{[$mdiffr]}{[$sdr]} = [$statr]...``]

There are several methods for computing the degrees of freedom in order to find the critical value. Check with your instructor if you are unsure which method to use.

---
### Exact df (Welch's T-test) with rounded df:

If you (or more likely, your software) can compute it:  

[``\text{df} = \frac{\left(\frac{s_1^2}{n_1}+\frac{s_2^2}{n_2}\right)^2}{\left(\frac{1}{n_1-1}\right)\left(\frac{s_1^2}{n_1}\right)^2 + \left(\frac{1}{n_2-1}\right)\left(\frac{s_2^2}{n_2}\right)^2}=[$dfr]...``]

[@ ($dfr == int($dfr)) ? "" : "To use a critical value table, round the above down to an integer.  " @]Using a Student T distribution with df = [$crithash{EXACT_DF_ROUNDED}{df}], the [$tails]-sided critical value (at the [$alphap]% significance level) is [@ abs($crithash{EXACT_DF_ROUNDED}{$tails}) @].

### Conservative df (Option 2):

With df = [$df_cons] (smaller sample size, minus 1), the [$tails]-sided critical value (at the [$alphap]% significance level) is [@ abs($crithash{CONSERVATIVE_DF}{$tails}) @].
---

This problem uses [$method_directions{$df_method}]; the critical region is [`[$crithash{region}]`]. The test statistic (t = [$statr]) [@ $reject ? "is" : "is not" @] in the critical region, so we [@ $reject ? "reject" : "fail to reject" @] the Null Hypothesis.

END_PGML_SOLUTION

COMMENT("Equal variances not assumed; Critical Value method with several options. Gives useful feedback for common errors, including wrong df.");
ENDDOCUMENT();
